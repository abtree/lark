apiVersion: v1
kind: PersistentVolume
metadata:
  name: etcd-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/etcd"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lark-etcd
spec:
  selector:
    matchLabels:
      app: lark-etcd
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: lark-etcd
    spec:
      containers:
      - image: gcr.io/etcd-development/etcd:v3.3.8
        name: etcd
        command:
          - /bin/sh
          - -ec
          - |
            HOSTNAME=$(hostname)
            exec etcd --name ${SET_NAME} \
            --initial-advertise-peer-urls http://${HOSTNAME}:2380 \
            --listen-peer-urls http://0.0.0.0:2380 \
            --listen-client-urls http://0.0.0.0:2379 \
            --advertise-client-urls http://${HOSTNAME}:2379 \
            --data-dir /var/run/etcd/default.etcd \
            --initial-cluster ${SET_NAME}=http://${HOSTNAME}:2380
        env:
          # 在实际中使用 secret
        - name: ALLOW_NONE_AUTHENTICATION
          value: "yes"
        - name: SET_NAME
          value: "lark-etcd"
        ports:
        - containerPort: 2380
          name: peer
          protocol: TCP
        - containerPort: 2379
          name: client
          protocol: TCP
        volumeMounts:
        - name: etcd-pv-claim
          mountPath: /var/run/etcd
      volumes:
      - name: etcd-pv-claim
        persistentVolumeClaim:
          claimName: etcd-pv-claim
---
# 创建外部访问接口
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: lark-etcd-client
    app: lark-etcd
  name: lark-etcd-client
  namespace: default
spec:
  ports:
  - name: lark-etcd-2379
    port: 2379
    protocol: TCP
    targetPort: 2379
    nodePort: 30379
  selector:
    app: lark-etcd
  sessionAffinity: None
  type: NodePort